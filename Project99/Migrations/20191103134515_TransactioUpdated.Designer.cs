// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Project99.Models;

namespace Project99.Migrations
{
    [DbContext(typeof(BankContext))]
    [Migration("20191103134515_TransactioUpdated")]
    partial class TransactioUpdated
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Project99.Models.Class.Business", b =>
                {
                    b.Property<int>("accountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accountNumber");

                    b.HasIndex("CustomersId");

                    b.ToTable("Business");
                });

            modelBuilder.Entity("Project99.Models.Class.Checking", b =>
                {
                    b.Property<int>("accountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accountNumber");

                    b.HasIndex("CustomersId");

                    b.ToTable("Checking");
                });

            modelBuilder.Entity("Project99.Models.Class.Loan", b =>
                {
                    b.Property<int>("accountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accountNumber");

                    b.HasIndex("CustomersId");

                    b.ToTable("Loan");
                });

            modelBuilder.Entity("Project99.Models.Class.Term", b =>
                {
                    b.Property<int>("accountNumber")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<double>("InterestRate")
                        .HasColumnType("float");

                    b.Property<DateTime>("createdAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("period")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("accountNumber");

                    b.HasIndex("CustomersId");

                    b.ToTable("Term");
                });

            modelBuilder.Entity("Project99.Models.Class.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessaccountNumber")
                        .HasColumnType("int");

                    b.Property<int?>("CheckingaccountNumber")
                        .HasColumnType("int");

                    b.Property<int?>("CustomersId")
                        .HasColumnType("int");

                    b.Property<int?>("LoanaccountNumber")
                        .HasColumnType("int");

                    b.Property<int?>("TermaccountNumber")
                        .HasColumnType("int");

                    b.Property<int>("accountNumber")
                        .HasColumnType("int");

                    b.Property<string>("accountType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("amount")
                        .HasColumnType("float");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.Property<int>("numberOfMonth")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BusinessaccountNumber");

                    b.HasIndex("CheckingaccountNumber");

                    b.HasIndex("CustomersId");

                    b.HasIndex("LoanaccountNumber");

                    b.HasIndex("TermaccountNumber");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("Project99.Models.Customers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("phoneNumber")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("Project99.Models.Class.Business", b =>
                {
                    b.HasOne("Project99.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomersId");
                });

            modelBuilder.Entity("Project99.Models.Class.Checking", b =>
                {
                    b.HasOne("Project99.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomersId");
                });

            modelBuilder.Entity("Project99.Models.Class.Loan", b =>
                {
                    b.HasOne("Project99.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomersId");
                });

            modelBuilder.Entity("Project99.Models.Class.Term", b =>
                {
                    b.HasOne("Project99.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomersId");
                });

            modelBuilder.Entity("Project99.Models.Class.Transaction", b =>
                {
                    b.HasOne("Project99.Models.Class.Checking", "Business")
                        .WithMany()
                        .HasForeignKey("BusinessaccountNumber");

                    b.HasOne("Project99.Models.Class.Checking", "Checking")
                        .WithMany()
                        .HasForeignKey("CheckingaccountNumber");

                    b.HasOne("Project99.Models.Customers", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomersId");

                    b.HasOne("Project99.Models.Class.Checking", "Loan")
                        .WithMany()
                        .HasForeignKey("LoanaccountNumber");

                    b.HasOne("Project99.Models.Class.Checking", "Term")
                        .WithMany()
                        .HasForeignKey("TermaccountNumber");
                });
#pragma warning restore 612, 618
        }
    }
}
